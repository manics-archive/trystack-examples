# https://www.jeffgeerling.com/blog/simple-glusterfs-setup-ansible

- hosts: gluster
  become: yes

  tasks:

  - name: format volume
    filesystem:
      fstype: xfs
      dev: /dev/vdb

  - name: mount volume
    mount:
      fstype: xfs
      path: /srv/gluster
      src: /dev/vdb
      state: mounted

  - name: gluster yum repo
    yum:
      name: centos-release-gluster312
      state: present

  - name: install gluster
    yum:
      name:
      - glusterfs-server
      - glusterfs-client
      state: present

  - name: start and enable gluster
    service:
      name: glusterd
      enabled: yes
      state: started

  - name: create directories
    file:
      path: "{{ item }}"
      state: directory
    with_items:
    - "{{ gluster_brick_dir }}"
    - "{{ gluster_mount_dir }}"

  - name: check if this is part of an existing cluster
    command: gluster volume info {{ gluster_brick_name }}
    register: _gluster_volume_info
    failed_when: _gluster_volume_info.rc not in [0, 1]
    changed_when: _gluster_volume_info.rc == 1

  # Ansible xattr module only works on user.* attrs
  - name: check xattrs
    command: getfattr --absolute-names -m . {{ gluster_brick_dir }}
    register: _gluster_brick_xattrs
    when: _gluster_volume_info.rc == 1

  - name: print xattrs
    debug:
      msg: "xattrs: {{ _gluster_brick_xattrs.stdout_lines }}"
    when: _gluster_volume_info.rc == 1

  # https://wiki.uiowa.edu/display/hpcadmin/Gluster%3A+Moving+bricks+between+servers
  # Ansible xattr module only works on user.* attrs
  - name: remove xattr if an existing brick is attached to a new server
    command: setfattr --remove={{ item }} {{ gluster_brick_dir }}
    when: (_gluster_volume_info.rc == 1) and (item in _gluster_brick_xattrs.stdout_lines)
    with_items:
    - trusted.gfid
    - trusted.glusterfs.volume-id

  - name: configure gluster volume
    gluster_volume:
      state: present
      name: "{{ gluster_brick_name }}"
      brick: "{{ gluster_brick_dir }}"
      replicas: "{{ (groups.gluster | length) > 1 | ternary(groups.gluster | length, omit) }}"
      cluster: "{{ groups.gluster | join(',') }}"
      rebalance: "{{ (groups.gluster | length) > 1 }}"
      host: "{{ inventory_hostname }}"
    # Deterministically run on first host in case hosts are added
    delegate_to: "{{ (groups.gluster | sort).0 }}"
    run_once: yes

  - name: mount gluster volume
    mount:
      name: "{{ gluster_mount_dir }}"
      src: "{{ inventory_hostname }}:/{{ gluster_brick_name }}"
      fstype: glusterfs
      opts: "defaults,_netdev"
      state: mounted

  vars:
    gluster_brick_name: bricktest
    gluster_brick_dir: /srv/gluster/brick
    gluster_mount_dir: /mnt/gluster
